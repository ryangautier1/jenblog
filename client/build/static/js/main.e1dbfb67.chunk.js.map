{"version":3,"sources":["utils/API.js","components/AdminModal/index.js","components/Header/index.js","components/Footer/index.js","components/Search/index.js","components/DeleteModal/index.js","components/TextThumbnail/index.js","components/VideoThumbnail/index.js","components/RelatedPosts/index.js","pages/VideoPage.js","pages/TextPage.js","pages/Thumbnails.js","pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["data","axios","post","query","limit","skip","queryString","map","item","indexOf","length","get","id","video","put","delete","textpost","AdminModal","props","useState","modalState","setModalState","tagsState","setTagsState","titleRef","useRef","videoRef","dateRef","captionRef","textpostRef","tagsRef","useEffect","document","getElementById","clientWidth","classList","remove","add","toggleInput","value","clearModal","current","className","onClick","toggleModal","htmlFor","type","ref","tags","includes","push","addTag","tag","key","newTags","filter","removeTag","event","preventDefault","formContent","title","date","split","caption","API","then","window","location","replace","catch","err","console","log","Date","now","body","handleFormSubmit","Header","userState","handleLogout","to","Footer","Search","searchState","removeTerm","handleSearch","searchRef","handleScroll","scrollY","getElementsByTagName","addEventListener","removeEventListener","onSubmit","placeholder","term","DeleteModal","deleteVideo","deleteTextPost","TextThumbnail","comments","clientHeight","VideoThumbnail","related","videoId","thumbnailSrc","src","alt","RelatedPosts","formatDates","postsData","setPostsData","ytCommentData","setYtCommentData","tpCommentData","setTpCommentData","undefined","vids","ytComments","posts","tpComments","allPosts","concat","sort","a","b","_id","comment","VideoPage","useParams","videoState","setVideoState","localStorage","getItem","jenBlogName","setJenBlogName","commentState","setCommentState","nameRef","commentRef","res","commentsOpen","toggleSubmitButton","errr","frameBorder","allow","allowFullScreen","removeItem","today","getMonth","getDate","getFullYear","author","handleCommentSubmit","input","setItem","updateName","TextPage","textState","setTextState","Thumbnails","noResults","setNoResults","loaded","setLoaded","updatePage","elem","querySelector","Masonry","itemSelector","percentPosition","gutter","i","dateArr","substring","join","j","updateComments","Login","usernameRef","passwordRef","username","password","App","setSearchState","setUserState","modalOpen","target","reload","exact","path","newTerms","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e1dbfb67.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n    signupUser: function(data) {\n        return axios.post(\"/api/user-login/signup\", data);\n    },\n    loginUser: function(data) {\n        return axios.post(\"/api/user-login/login\", data);\n    },\n    getYtVideos: function() {\n        return axios.get(\"/api/youtube\");\n    },\n    // this function takes an array of search terms and makes api call\n    getYtVideosByQuery: function(query, limit, skip) {\n        // build query string\n        let queryString = \"?search[]=\"\n        query.map(item => {\n            // if it is not the last item in the query array\n            if (query.indexOf(item) !== query.length-1) {\n                queryString += (item + \"&search[]=\");\n            }\n            else {\n                queryString += item;\n            }\n        })\n        if (limit) {\n            queryString += \"&limit=\" + limit;\n        }\n        if (skip) {\n            queryString += \"&skip=\" + skip;\n        }\n        return axios.get(\"/api/youtube\" + queryString);\n    },\n    getVideoById: function(id) {\n        return axios.get(\"/api/youtube/\" + id);\n    },\n    addVideo: function(data) {\n        return axios.post(\"/api/youtube\", data);\n    },\n    getYtCommentsByVideo: function(video) {\n        return axios.get(\"/api/ytcomment/\" + video);\n    },\n    getYtComments: function() {\n        return axios.get(\"/api/ytcomment\");\n    },\n    postNewYtComment: function(data) {\n        return axios.post(\"/api/ytcomment\", data);\n    },\n    updateYtComments: function(video, data) {\n        return axios.put(\"/api/ytcomment/\" + video, data);\n    },\n    deleteVideo: function(id) {\n        return axios.delete(\"/api/youtube/\" + id);\n    },\n    deleteComments: function(id) {\n        return axios.delete(\"/api/ytcomment/delete/\" + id);\n    },\n    getUserData: function () {\n        return axios.get(\"/api/user-login/user_data\");\n    },\n    logoutUser: function() {\n        return axios.get(\"/api/user-login/logout\");\n    },\n    addTextPost: function(data) {\n        return axios.post(\"/api/textpost\", data);\n    },\n    getTextPosts: function() {\n        return axios.get(\"/api/textpost\");\n    },\n    getTextPostsByQuery: function(query, limit, skip) {\n        // build query string\n        let queryString = \"?search[]=\"\n        query.map(item => {\n            // if it is not the last item in the query array\n            if (query.indexOf(item) !== query.length-1) {\n                queryString += (item + \"&search[]=\");\n            }\n            else {\n                queryString += item;\n            }\n        })\n        if (limit) {\n            queryString += \"&limit=\" + limit;\n        }\n        if (skip) {\n            queryString += \"&skip=\" + skip;\n        }\n        return axios.get(\"/api/textpost\" + queryString);\n    },\n    getTextPostById: function(id) {\n        return axios.get(\"/api/textpost/\" + id);\n    },\n    deleteTextPost: function(id) {\n        return axios.delete(\"/api/textpost/\" + id);\n    },\n    getTpComments: function() {\n        return axios.get(\"/api/textpostcomment\");\n    },\n    getTpCommentsByTp: function(textpost) {\n        return axios.get(\"/api/textpostcomment/\" + textpost)\n    },\n    postNewTpComment: function(data) {\n        return axios.post(\"/api/textpostcomment\", data);\n    },\n    updateTpComments: function(textpost, data) {\n        return axios.put(\"/api/textpostcomment/\" + textpost, data);\n    },\n    deleteTpComments: function(id) {\n        return axios.delete(\"/api/textpostcomment/delete/\" + id);\n    }\n};","import React, { useRef, useState, useEffect } from 'react';\r\nimport API from '../../utils/API';\r\n\r\n\r\nfunction AdminModal(props) {\r\n  const [modalState, setModalState] = useState(\"youtube\");\r\n  const [tagsState, setTagsState] = useState([]);\r\n\r\n  // set up useRef for form values\r\n  const titleRef = useRef();\r\n  const videoRef = useRef();\r\n  const dateRef = useRef();\r\n  const captionRef = useRef();\r\n  const textpostRef = useRef();\r\n  const tagsRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // as tags are added, check width of tag area and adjust styling when it passes 300 px\r\n    if (document.getElementById(\"tagsrow\").clientWidth > 300) {\r\n      document.getElementById(\"tagsrow\").classList.remove(\"sm:ml-6\");\r\n      document.getElementById(\"tagsrow\").classList.remove(\"sm:mt-0\");\r\n      document.getElementById(\"tagsrow\").classList.add(\"w-full\");\r\n      document.getElementById(\"tagsrow\").classList.add(\"mt-2\");\r\n    }\r\n  }, [tagsState]);\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    // for youtube video input\r\n    if (modalState === \"youtube\") {\r\n      // validate input fields\r\n      // if title is blank, display warning\r\n      if (titleRef.current.value === \"\") {\r\n        document.getElementById(\"titleinput\").classList.remove(\"border-gray-200\");\r\n        document.getElementById(\"titleinput\").classList.add(\"border-red-400\");\r\n        document.getElementById(\"titlewarning\").classList.remove(\"hidden\");\r\n        return;\r\n      }\r\n      // if date is blank, display warning\r\n      if (dateRef.current.value === \"\") {\r\n        document.getElementById(\"dateinput\").classList.remove(\"border-gray-200\");\r\n        document.getElementById(\"dateinput\").classList.add(\"border-red-400\");\r\n        document.getElementById(\"datewarning\").classList.remove(\"hidden\");\r\n        return;\r\n      }\r\n      // if embed code is blank, display warning\r\n      if (videoRef.current.value === \"\") {\r\n        document.getElementById(\"videoinput\").classList.remove(\"border-gray-200\");\r\n        document.getElementById(\"videoinput\").classList.add(\"border-red-400\");\r\n        document.getElementById(\"videowarning\").classList.remove(\"hidden\");\r\n        return;\r\n      }\r\n\r\n      // create form content object with user input\r\n      let formContent = {\r\n        title: titleRef.current.value,\r\n        date: dateRef.current.value,\r\n        video: videoRef.current.value.split(\"src=\\\"\")[1].split(\"\\\"\")[0],\r\n      };\r\n      // grab caption input if there is a caption\r\n      if (captionRef.current.value !== \"\") {\r\n        formContent.caption = captionRef.current.value\r\n      }\r\n      // grab tag input\r\n      // if the user typed a tag but didn't click the plus\r\n      let tags = [];\r\n      if (tagsRef.current.value !== \"\" && !tagsState.includes(tagsRef.current.value)) {\r\n        tags = [tagsRef.current.value];\r\n      }\r\n      tags.push(...tagsState);\r\n      // if there are tags at all, add them to the formContent object\r\n      if (tags !== []) {\r\n        formContent.tags = tags;\r\n      }\r\n\r\n      // add video to db\r\n      API.addVideo(formContent).then(() => {\r\n        // clear and close modal, load home page\r\n        clearModal();\r\n        props.toggleModal(\"admin-modal\");\r\n        window.location.replace('/');\r\n      }\r\n\r\n      ).catch(err => console.log(err));\r\n    }\r\n\r\n    // for text post input\r\n    else if (modalState === \"text\") {\r\n      let formContent;\r\n      // validate input fields\r\n      // if body is empty, display warning\r\n      if (textpostRef.current.value === \"\") {\r\n        document.getElementById(\"textpostinput\").classList.remove(\"border-gray-200\");\r\n        document.getElementById(\"textpostinput\").classList.add(\"border-red-400\");\r\n        document.getElementById(\"textpostwarning\").classList.remove(\"hidden\");\r\n        return;\r\n      }\r\n      else {\r\n        document.getElementById(\"textpostinput\").classList.add(\"border-gray-200\");\r\n        document.getElementById(\"textpostinput\").classList.remove(\"border-red-400\");\r\n        document.getElementById(\"textpostwarning\").classList.add(\"hidden\");\r\n      }\r\n\r\n      // create formContent object\r\n      // if the user entered a title\r\n      if (titleRef.current.value !== \"\") {\r\n        formContent = {\r\n          title: titleRef.current.value,\r\n          date: Date.now(),\r\n          body: textpostRef.current.value\r\n        }\r\n      }\r\n      // if the user did not enter a title\r\n      else {\r\n        formContent = {\r\n          date: Date.now(),\r\n          body: textpostRef.current.value\r\n        }\r\n      }\r\n\r\n      // grab tag input\r\n      // if the user typed a tag but didn't click the plus\r\n      let tags = [];\r\n      if (tagsRef.current.value !== \"\" && !tagsState.includes(tagsRef.current.value)) {\r\n        tags = [tagsRef.current.value];\r\n      }\r\n      tags.push(...tagsState);\r\n      // if the user entered tags at all, add them to formContent\r\n      if (tags !== []) {\r\n        formContent.tags = tags;\r\n      }\r\n\r\n      API.addTextPost(formContent).then(() => {\r\n        // clear and close modal, load home page\r\n        clearModal();\r\n        props.toggleModal(\"admin-modal\");\r\n        window.location.replace('/');\r\n      }).catch(err => console.log(err));\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // this function updates the modal state to reflect whether the user clicked\r\n  // the youtube icon or text post icon. it takes a string 'youtube' or 'text'\r\n  // as input\r\n  const toggleInput = (value) => {\r\n    setModalState(value);\r\n  }\r\n\r\n\r\n  // this function clears the contents of the form in the modal\r\n  const clearModal = () => {\r\n    titleRef.current.value = \"\";\r\n    if (modalState === \"youtube\") {\r\n      dateRef.current.value = \"\";\r\n      videoRef.current.value = \"\";\r\n      captionRef.current.value = \"\";\r\n    }\r\n    if (modalState === \"text\") {\r\n      textpostRef.current.value = \"\";\r\n    }\r\n    tagsRef.current.value = \"\";\r\n    setTagsState([]);\r\n  }\r\n\r\n  // this function updates the tag state to remove a tag\r\n  const removeTag = (tag) => {\r\n    let newTags = tagsState.filter(item => item !== tag);\r\n    setTagsState(newTags);\r\n  }\r\n\r\n  // this function updates the tag state to add a tag\r\n  const addTag = () => {\r\n    let tags = [...tagsState];\r\n    if (!tags.includes(tagsRef.current.value) && tagsRef.current.value !== \"\") {\r\n      tags.push(tagsRef.current.value);\r\n    }\r\n    setTagsState(tags);\r\n    tagsRef.current.value = \"\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"text-center\">\r\n        <button\r\n          className=\"text-sm shadow border-2 border-gray-100 hover:text-red-500 hover:bg-gray-100 focus:outline-none text-white font-bold py-2 px-2 sm:px-4\"\r\n          id=\"admin-modal-open\"\r\n          onClick={() => {\r\n            props.toggleModal(\"admin-modal\")\r\n          }}>\r\n          add new\r\n        </button>\r\n      </div>\r\n\r\n      {/* modal background here */}\r\n      <div className=\"modal-bg hidden opacity-50 z-10 bg-black fixed top-0 left-0\" id=\"admin-modal-bg\"></div>\r\n\r\n      {/* modal here */}\r\n      <div id=\"admin-modal\"\r\n        className=\"fixed modal right-0 left-0 mx-auto border hidden bg-white z-20 p-5\">\r\n        <div className=\"flex flex-row mb-2 content-center h-10\">\r\n          {modalState === \"youtube\" ?\r\n          // red text and large font if this icon is selected\r\n            <div className=\"mx-3 text-red-700 text-3xl cursor-pointer nav-icon\" onClick={() => toggleInput(\"youtube\")}>\r\n              <i className=\"fab fa-youtube\"></i>\r\n            </div>\r\n            :\r\n            // grey text and small font if this icon is not selected\r\n            <div className=\"mx-3 text-gray-700 text-2xl cursor-pointer nav-icon\" onClick={() => toggleInput(\"youtube\")}>\r\n              <i className=\"fab fa-youtube\"></i>\r\n            </div>}\r\n\r\n          {modalState === \"text\" ?\r\n            // red text and large font if this icon is selected\r\n            <div className=\"p-1 text-red-700 text-2xl cursor-pointer nav-icon\" onClick={() => toggleInput(\"text\")}>\r\n              <i className=\"fas fa-quote-left\"></i>\r\n            </div>\r\n            :\r\n            // grey text and small font if this icon is not selected\r\n            <div className=\"p-1 text-gray-700 text-xl cursor-pointer nav-icon\" onClick={() => toggleInput(\"text\")}>\r\n              <i className=\"fas fa-quote-left\"></i>\r\n            </div>}\r\n        </div>\r\n        <form className=\"mb-4\">\r\n          <label htmlFor=\"#titleinput\">\r\n            {/* label will say Subject if user is on textpost form, or title if on youtube form */}\r\n            {modalState === \"text\" ? \"Subject\" : \"Title\"}\r\n          </label>\r\n          <input className=\"mb-2 bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-200\"\r\n            type=\"text\"\r\n            id=\"titleinput\"\r\n            ref={titleRef} />\r\n            {/* warning hidden by default */}\r\n          <p className=\"hidden text-red-600 text-sm italic\" id=\"titlewarning\">You must enter a title</p>\r\n\r\n          {modalState === \"youtube\" ?\r\n          // youtube inputs\r\n            <div>\r\n              <label htmlFor=\"#dateinput\">Date Uploaded</label>\r\n              <input className=\"mb-2 bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-200\"\r\n                type=\"date\"\r\n                id=\"dateinput\"\r\n                ref={dateRef} />\r\n                {/* warning hidden by default */}\r\n              <p className=\"hidden text-red-600 text-sm italic\" id=\"datewarning\">You must enter a date</p>\r\n\r\n              <label htmlFor=\"#videolink\">Embed Code</label>\r\n              <input className=\"mb-2 bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-200\"\r\n                type=\"text\"\r\n                id=\"videolink\"\r\n                ref={videoRef} />\r\n                {/* warning hidden by default */}\r\n              <p className=\"hidden text-red-600 text-sm italic\" id=\"embedwarning\">You must enter a valid embed code</p>\r\n\r\n              <label htmlFor=\"#captioninput\">Caption (Optional)</label>\r\n              <textarea className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-200\"\r\n                id=\"captioninput\"\r\n                ref={captionRef} />\r\n            </div>\r\n\r\n            :\r\n            // textpost inputs\r\n            <div>\r\n              <label htmlFor=\"#textpostinput\">Body</label>\r\n              <textarea className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-200\"\r\n                id=\"textpostinput\"\r\n                ref={textpostRef} />\r\n              <p className=\"hidden text-red-600 text-sm italic\" id=\"textpostwarning\">You must enter content for your post</p>\r\n            </div>\r\n\r\n          }\r\n          {/* tags */}\r\n          <div className=\"flex flex-row flex-wrap mb-2\">\r\n            <label htmlFor=\"#tagsinput\" className=\"w-full\">Tags</label>\r\n            <br />\r\n            <div className=\"relative tags\">\r\n              <input className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-200\"\r\n                type=\"text\"\r\n                id=\"tagsinput\"\r\n                ref={tagsRef} />\r\n              <i className=\"fas fa-plus absolute right-0 bottom-0 mb-3 text-gray-600 mr-2\"\r\n                onClick={() => { addTag() }}></i>\r\n            </div>\r\n\r\n            {tagsState ?\r\n            // is there are tags, they will be displayed here\r\n              <div className=\"overflow-auto ml-0 sm:ml-6 sm:mt-0 mt-2 flex flex-row\" id=\"tagsrow\">\r\n                {tagsState.map(tag => {\r\n                  return (\r\n                    <div className=\"mx-1 bg-gray-300 py-2 pr-1 pl-3 rounded-full whitespace-no-wrap\" key={tag}>\r\n                      {tag}\r\n                      <i className=\"fas fa-times ml-2 mr-1 text-gray-500 cursor-pointer\"\r\n                        onClick={() => { removeTag(tag) }}></i>\r\n                    </div>\r\n                  )\r\n                })\r\n                }\r\n              </div>\r\n              :\r\n              null}\r\n          </div>\r\n        </form>\r\n\r\n        <div className=\"flex flex-row\">\r\n          {/* buttons */}\r\n          <button type=\"submit\" className=\"text-sm shadow border-2 border-red-500 hover:text-red-700 hover:border-red-700 focus:outline-none text-red-500 font-bold py-2 px-2 sm:px-4\"\r\n            onClick={(event) => handleFormSubmit(event)}>\r\n            submit</button>\r\n          <button type=\"button\" className=\"ml-2 text-sm shadow bg-red-500 hover:bg-red-700 focus:outline-none text-gray-100 font-bold py-2 px-2 sm:px-4\"\r\n            onClick={() => {\r\n              clearModal();\r\n              props.toggleModal(\"admin-modal\");\r\n            }}>\r\n            close</button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminModal;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AdminModal from '../AdminModal';\r\nfunction Header(props) {\r\n  const { toggleModal, userState, handleLogout } = props;\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"min-w-full py-2 px-4 bg-white flex flex-row justify-between z-20 relative header-gradient\">\r\n      <Link to={\"/\"} >\r\n        <h1 className=\"text-3xl varta text-gray-100\">blog site</h1>\r\n      </Link>\r\n        <div>\r\n          {userState ?\r\n          // if the user is logged in, display admin modal and logout buttons\r\n          <div className=\"flex flex-row\">\r\n            <AdminModal toggleModal={toggleModal} />\r\n            <button type=\"button\" className=\"ml-2 text-sm shadow border-2 border-gray-100 hover:text-red-500 hover:bg-gray-100 focus:outline-none text-white font-bold py-2 px-2 sm:px-4\"\r\n              onClick={() => handleLogout()}>\r\n              logout</button>\r\n          </div>            \r\n            :\r\n            // if the user is not logged in, display login button\r\n            <Link to={\"/admin\"} >\r\n              <button className=\"text-sm shadow border-2 border-gray-100 hover:text-red-500 hover:bg-gray-100 focus:outline-none text-white font-bold py-2 px-4\">\r\n                sign in</button>\r\n            </Link>}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"flex flex-row pt-3 text-gray-200 opacity-75 bg-gray-600 justify-around\">\r\n      <div className=\"pt-4 text-3xl sm:text-4xl flex justify-center w-6/12\">\r\n        <i className=\"fab px-4 fa-youtube\"></i>\r\n        <i className=\"fab px-4 fa-instagram\"></i>\r\n        <i className=\"fab px-4 fa-tumblr-square\"></i>\r\n      </div>\r\n      <div className=\"pt-4 w-6/12 text-md sm:text-lg\">\r\n        <p>\r\n          email@gmail.com\r\n          <br />\r\n          +1(555)-555-5555\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React, { useRef, useEffect } from 'react';\r\n\r\n\r\nfunction Search(props) {\r\n\r\n  const { searchState, removeTerm, handleSearch } = props;\r\n\r\n  const searchRef = useRef();\r\n\r\n  // scroll listener in useeffect and clean up listener\r\n  useEffect(function setupScroll() {\r\n    function handleScroll() {\r\n      // if the window scrolls below certain value, make search sticky to top\r\n      if (window.scrollY > 60) {\r\n        document.getElementById(\"search\").classList.add(\"fixed\", \"top-0\");\r\n        document.getElementById(\"search\").classList.remove(\"relative\");\r\n        document.getElementsByTagName(\"main\")[0].classList.add(\"extra-margin\");\r\n      }\r\n\r\n      else {\r\n        document.getElementById(\"search\").classList.remove(\"fixed\", \"top-0\");\r\n        document.getElementById(\"search\").classList.add(\"relative\");\r\n        document.getElementsByTagName(\"main\")[0].classList.remove(\"extra-margin\");\r\n      }\r\n\r\n    }\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return function cleanupScroll() {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    }\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"py-2 px-5 border-b border-gray-500 flex flex-row flex-wrap bg-white w-full left-0 z-10 content-center relative\" id=\"search\">\r\n      <form\r\n        className=\"search relative\"\r\n        onSubmit={(event) => {\r\n          handleSearch(event, searchRef.current.value)\r\n          searchRef.current.value = \"\";\r\n        }}>\r\n        <input placeholder=\"Search\"\r\n          type=\"text\"\r\n          ref={searchRef}\r\n          className=\"rounded-full border border-gray-500 px-3 py-1 relative w-full\" />\r\n        <i className=\"fas fa-search absolute right-0 bottom-0 mb-2 text-gray-600 mr-2\"></i>\r\n      </form>\r\n\r\n      <div className=\"overflow-auto ml-0 sm:ml-6 mt-2 sm:mt-0 flex flex-row\">\r\n        {/* display search terms with remove buttons */}\r\n        {searchState.map(term => {\r\n          return (\r\n            <div className=\"mx-1 bg-gray-300 py-1 pr-1 pl-3 rounded-full whitespace-no-wrap\" key={term}>\r\n              {term}\r\n              <i className=\"fas fa-times ml-2 mr-1 text-gray-500 cursor-pointer\"\r\n                onClick={() => { removeTerm(term) }}></i>\r\n            </div>\r\n          )\r\n        })\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nfunction DeleteModal(props) {\r\n\r\n  const { toggleModal, id, title, type, deleteVideo, deleteTextPost } = props;\r\n\r\n  // use appropriate delete function based on type passed in props\r\n  const handleDelete = () => {\r\n    if (type === \"video\") {\r\n      deleteVideo();\r\n    }\r\n    else if (type === \"textpost\") {\r\n      deleteTextPost();\r\n  }\r\n}\r\n\r\n  return (\r\n    <div>\r\n      {/* modal button */}\r\n      <div className=\"absolute top-0 right-0 w-8 h-8 text-lg text-center text-white font-bold opacity-50 bg-black rounded-full cursor-pointer\"\r\n        onClick={() => toggleModal(id + \"delete-modal\")}\r\n      >X\r\n          </div>\r\n\r\n      {/* modal background here */}\r\n      <div className=\"modal-bg hidden opacity-50 z-10 bg-black fixed top-0 left-0\" id={id + \"delete-modal-bg\"}></div>\r\n\r\n      {/* modal here */}\r\n      <div id={id + \"delete-modal\"}\r\n        className=\"fixed delete-modal right-0 left-0 mx-auto border hidden bg-white z-20 p-5\">\r\n        {title ? \r\n        // if the post has a title, display the title in the warning message\r\n        <p className=\"text-gray-700 mb-4\">Are you sure you want to delete \"{title}\" and its comments?</p>\r\n        : <p className=\"text-gray-700 mb-4\">Are you sure you want to delete this post and its comments?</p>}\r\n        {/* buttons */}\r\n        <div className=\"flex flex-row\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"mr-2 bg-red-700 hover:bg-red-800 text-white font-bold py-2 px-4 rounded\"\r\n            onClick={() => { handleDelete() }}>\r\n            I'm Sure</button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n            onClick={() => toggleModal(id + \"delete-modal\")}>\r\n            Nevermind</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteModal;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction TextThumbnail(props) {\r\n\r\n  const { id, body, date, title, comments, tags } = props;\r\n\r\n  useEffect(() => {\r\n    // check if text is too tall. If so, show fade out effect\r\n    if (document.getElementById(id + \"-text\").clientHeight > 200) {\r\n      document.getElementById(id + \"-fade\").classList.remove(\"hidden\");\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Link to={\"/text/\" + id}>\r\n      <div className=\"thumbnail-card mb-4 cursor-pointer p-4\">\r\n        <p className=\"varta overflow-hidden text-thumbnail-body\" id={id + \"-text\"}>{body}\r\n        {/* fade out effect */}\r\n          <span className=\"text-thumbnail-fade hidden\" id={id + \"-fade\"}></span>\r\n        </p>\r\n        <h2 className=\"lato text-lg text-gray-900 text-bold\">{title}</h2>\r\n        <div className=\"text-md text-blue-700\">{date}</div>\r\n        {/* if there are comments */}\r\n        {/* here, comments are passed from props and will be a number reflecting length of comments array */}\r\n        {comments ? \r\n          // if there is more than one comment\r\n          comments > 1 ?\r\n          <div className=\"text-md text-gray-700\">\r\n            {comments} Comments</div>\r\n            : \r\n            // if there is only one comment\r\n            <div className=\"text-md text-gray-700\">\r\n            {comments} Comment</div>\r\n            :\r\n            // if there are no comments\r\n            null}\r\n        {tags ?\r\n          <div className=\"flex flex-wrap flex-row\">\r\n            {tags.map(item => {\r\n              return (\r\n                <div className=\"text-md text-gray-500\" key={item}>\r\n                  {/* add margin if it is not the last tag */}\r\n                  {tags.indexOf(item) !== tags.length - 1 ?\r\n                   <span className=\"mr-1\">#{item}</span> \r\n                   :\r\n                   <span>#{item}</span>}\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n          : null\r\n        }\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default TextThumbnail;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction VideoThumbnail(props) {\r\n\r\n  const { video, id, related, title, date, comments, tags } = props;\r\n\r\n  // grab video id from embed code\r\n  // split by /\r\n  let videoId = video.split(\"/\");\r\n  // id will be last item of array\r\n  videoId = videoId[videoId.length - 1];\r\n\r\n  let thumbnailSrc = \"https://img.youtube.com/vi/\" + videoId + \"/0.jpg\";\r\n\r\n\r\n  return (\r\n    <Link to={\"/video/\" + id}>\r\n      <div className=\"thumbnail-card mb-4 cursor-pointer p-3\">\r\n        {!related ?\r\n          <img src={thumbnailSrc} alt={title} className=\"mb-2\" />\r\n          : <img src={thumbnailSrc} alt={title} className=\"mb-2 related-img\" />\r\n        }\r\n        <h2 className=\"lato text-lg text-gray-900 text-bold\">{title}</h2>\r\n        <div className=\"text-md text-blue-700\">{date}</div>\r\n        {/* if there are comments */}\r\n        {/* here, comments are passed from props and will be a number reflecting length of comments array */}\r\n        {comments ?\r\n          // if there is more than one comment\r\n          comments > 1 ?\r\n            <div className=\"text-md text-gray-700\">\r\n              {comments} Comments</div>\r\n            :\r\n            // if there is only one comment\r\n            <div className=\"text-md text-gray-700\">\r\n              {comments} Comment</div>\r\n          :\r\n          // if there are no comments\r\n          null}        \r\n          {tags ?\r\n            <div className=\"flex flex-wrap flex-row\">\r\n              {tags.map(item => {\r\n                return (\r\n                  <div className=\"text-md text-gray-500\" key={item}>\r\n                    {/* add margin if it is not the last tag */}\r\n                    {tags.indexOf(item) !== tags.length - 1 ?\r\n                      <span className=\"mr-1\">#{item}</span>\r\n                      :\r\n                      <span>#{item}</span>}\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n            : null\r\n        }\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default VideoThumbnail;","import React, { useEffect, useState } from 'react';\r\nimport API from '../../utils/API'\r\nimport TextThumbnail from '../TextThumbnail';\r\nimport VideoThumbnail from '../VideoThumbnail';\r\n\r\nfunction RelatedPosts(props) {\r\n\r\n  const { tags, formatDates, id } = props;\r\n  const [postsData, setPostsData] = useState([]);\r\n  const [ytCommentData, setYtCommentData] = useState([]);\r\n  const [tpCommentData, setTpCommentData] = useState([]);\r\n\r\n  // on load, make api call for related posts based on tags\r\n  useEffect(() => {\r\n    if (tags !== undefined) {\r\n      let limit = 3;\r\n      API.getYtVideosByQuery(tags, limit).then(vids => {\r\n        API.getYtComments().then(ytComments => {\r\n          API.getTextPostsByQuery(tags, limit).then(posts => {\r\n            API.getTpComments().then(tpComments => {\r\n\r\n              let allPosts = vids.data.concat(posts.data);\r\n\r\n              // sort the result by date descending\r\n              allPosts.sort(function (a, b) {\r\n                return new Date(b.date) - new Date(a.date);\r\n              });\r\n\r\n              // put the dates in mm-dd-yyyy format\r\n              formatDates(ytComments.data, \"comment\");\r\n              formatDates(allPosts, \"post\")\r\n              formatDates(tpComments.data, \"comment\");\r\n\r\n              // update the state\r\n              setPostsData(allPosts);\r\n              setYtCommentData(ytComments.data);\r\n              setTpCommentData(tpComments.data);\r\n            }).catch(err => console.log(\"error getting text post comments\", err));\r\n          }).catch(err => console.log(\"error getting text posts\", err));\r\n        }).catch(err => console.log(\"error getting youtube comments\", err));\r\n      }).catch(err => console.log(\"error getting youtube videos\", err));\r\n    }\r\n  }, [tags])\r\n\r\n  return (\r\n    <aside className=\"xl:ml-2\">\r\n      \r\n      <h1 className=\"xl:text-center mb-2\">You may also be interested in...</h1>\r\n      \r\n      <div className=\"flex xl:flex-col flex-row overflow-x-auto xl:overflow-hidden mx-5\">\r\n        {postsData.map(item => {\r\n          if (item._id === id) {\r\n            return null;\r\n          }\r\n          // check if item is a video\r\n          if (item.video) {\r\n            let comments = ytCommentData.filter(comment => comment.video === item._id);\r\n            // check if video has comments\r\n            if (comments[0] !== undefined) {\r\n              return (\r\n                <div className=\"related block mx-1 animate__animated animate__fadeIn\" key={item._id}>\r\n                  <VideoThumbnail id={item._id} title={item.title} date={item.date} video={item.video} tags={item.tags} related={true} comments={comments[0].comments.length} />\r\n                </div>\r\n              )\r\n            }\r\n            else {\r\n              // video has no comments\r\n              return (\r\n                <div className=\"related block mx-1 animate__animated animate__fadeIn\" key={item._id}>\r\n                  <VideoThumbnail id={item._id} title={item.title} date={item.date} tags={item.tags} related={true} video={item.video} />\r\n                </div>\r\n              )\r\n            }\r\n          }\r\n          // check if item is a text post\r\n          else if (item.body) {\r\n            let comments = tpCommentData.filter(comment => comment.textpost === item._id);\r\n            // check if text post has comments\r\n            if (comments[0] !== undefined) {\r\n              return (\r\n                <div className=\"related block mx-1 animate__animated animate__fadeIn\" key={item._id}>\r\n                  <TextThumbnail id={item._id} title={item.title} date={item.date} body={item.body} caption={item.caption} tags={item.tags} related={true} comments={comments[0].comments.length} />\r\n                </div>\r\n              )\r\n            }\r\n            else {\r\n              // text post with no comments\r\n              return (\r\n                <div className=\"related block mx-1 animate__animated animate__fadeIn\" key={item._id}>\r\n                  <TextThumbnail id={item._id} title={item.title} date={item.date} body={item.body} caption={item.caption} related={true} tags={item.tags} />\r\n                </div>\r\n              )\r\n            }\r\n          }\r\n        })\r\n        }\r\n      </div>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default RelatedPosts;","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport DeleteModal from '../components/DeleteModal';\r\nimport RelatedPosts from '../components/RelatedPosts';\r\nimport API from '../utils/API';\r\n\r\n\r\nfunction VideoPage(props) {\r\n  let { id } = useParams();\r\n  const [videoState, setVideoState] = useState(false);\r\n  const { formatDates, userState, toggleModal } = props;\r\n  const [jenBlogName, setJenBlogName] = useState(localStorage.getItem(\"jenBlogName\"));\r\n  const [commentState, setCommentState] = useState(false);\r\n  const nameRef = useRef();\r\n  const commentRef = useRef();\r\n\r\n  useEffect(() => {\r\n    API.getVideoById(id).then(res => {\r\n      formatDates(res.data, \"single\");\r\n      setVideoState(res.data);\r\n      API.getYtCommentsByVideo(id).then(comments => {\r\n\r\n        formatDates(comments.data, \"comments\");\r\n\r\n        if (comments.data) {\r\n          setCommentState(comments.data[0]);\r\n        }\r\n      }).catch(() => {\r\n        console.log(\"no comments\")\r\n\r\n      });\r\n    }).catch(err => console.log(err))\r\n  }, [id])\r\n\r\n  const removeName = () => {\r\n    // clear local storage\r\n    localStorage.removeItem(\"jenBlogName\");\r\n    // update state\r\n    setJenBlogName(localStorage.getItem(\"jenBlogName\"));\r\n  }\r\n\r\n  const updateName = (event, input) => {\r\n    event.preventDefault();\r\n    if (input !== \"\") {\r\n      // update local storage\r\n      localStorage.setItem(\"jenBlogName\", input);\r\n      // update state\r\n      setJenBlogName(localStorage.getItem(\"jenBlogName\"));\r\n      // clear text field\r\n      nameRef.current.value = \"\";\r\n    }\r\n  }\r\n\r\n  const handleCommentSubmit = (event, id) => {\r\n    event.preventDefault();\r\n    let today = new Date();\r\n    let date = (today.getMonth() + 1) + '-' + today.getDate() + '-' + today.getFullYear();\r\n    // console.log(commentRef.current.value, id, jenBlogName, date);\r\n\r\n    // if there are no comments yet \r\n    if (!commentState) {\r\n      API.postNewYtComment(\r\n        {\r\n          video: id,\r\n          comments: [\r\n            {\r\n              author: jenBlogName,\r\n              date: date,\r\n              comment: commentRef.current.value\r\n            }\r\n          ]\r\n        }\r\n      ).then(() => {\r\n        API.getYtCommentsByVideo(id).then(comments => {\r\n          formatDates(comments.data, \"comments\");\r\n          setCommentState(comments.data[0]);\r\n          commentRef.current.value = \"\";\r\n        }).catch(err => console.log(err));\r\n      }).catch(err => console.log(err));\r\n    }\r\n    else {\r\n      let data = {\r\n        author: jenBlogName,\r\n        date: date,\r\n        comment: commentRef.current.value\r\n      }\r\n      API.updateYtComments(id, data).then(() => {\r\n        API.getYtCommentsByVideo(id).then(comments => {\r\n          formatDates(comments.data, \"comments\");\r\n          setCommentState(comments.data[0]);\r\n\r\n          commentRef.current.value = \"\";\r\n        }).catch(err => console.log(err));\r\n      }).catch(err => console.log(err));\r\n    }\r\n  }\r\n\r\n  const deleteVideo = () => {\r\n    if (commentState) {\r\n      API.deleteVideo(id).then(() => {\r\n        API.deleteComments(commentState._id).then(() => {\r\n          toggleModal(id + \"delete-modal\");\r\n          window.location.replace(\"/blog\");\r\n        }).catch((errr) => { console.log(errr) })\r\n      }).catch((err) => { console.log(err) });\r\n    }\r\n    else {\r\n      API.deleteVideo(id).then(() => {\r\n        toggleModal(id + \"delete-modal\");\r\n        window.location.replace(\"/blog\");\r\n      }).catch((err) => { console.log(err) });\r\n    }\r\n  }\r\n\r\n  let commentsOpen = false;\r\n  const toggleComments = () => {\r\n    if (commentsOpen) {\r\n      document.getElementById(\"comments-section-\" + id).classList.add(\"hidden\");\r\n      document.getElementById(\"arrow-\" + id).classList.remove(\"fa-caret-square-up\");\r\n      document.getElementById(\"arrow-\" + id).classList.add(\"fa-caret-square-down\");\r\n    }\r\n    else {\r\n      document.getElementById(\"comments-section-\" + id).classList.remove(\"hidden\");\r\n      document.getElementById(\"arrow-\" + id).classList.add(\"fa-caret-square-up\");\r\n      document.getElementById(\"arrow-\" + id).classList.remove(\"fa-caret-square-down\");\r\n    }\r\n    commentsOpen = !commentsOpen;\r\n  }\r\n\r\n\r\n  const toggleSubmitButton = () => {\r\n    document.getElementById(id + \"submit-button\").classList.remove(\"hidden\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/blog\">\r\n        <p className=\"mt-8 ml-4 sm:ml-8 text-gray-600 hover:text-gray-800 inline-block\">\r\n          <i className=\"fas fa-angle-double-left\"></i>   Home\r\n        </p>\r\n      </Link>\r\n      <main className=\"mt-4 mx-1 pb-2 sm:mx-16 xl:flex xl:flex-row xl:justify-around\">\r\n        <div className=\"flex-shrink-0 videos\">\r\n\r\n          <div key={id} className=\"mb-5 relative text-gray-700\">\r\n            {/* if user is logged in, show delete button */}\r\n            {userState ?\r\n              <DeleteModal id={id} title={videoState.title} toggleModal={toggleModal} deleteVideo={deleteVideo} type={\"video\"} />\r\n              : <div></div>}\r\n            <span className=\"text-lg sm:text-xl pl-2 sm:pl-0 lato\">{videoState.title}</span>\r\n            <br />\r\n            <span className=\"text-gray-700 text-sm pl-2 sm:pl-0 lato\">{videoState.date}</span>\r\n            <div className=\"yt-container mt-2\">\r\n              <iframe src={videoState.video} title={videoState.title} frameBorder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowFullScreen={true}></iframe>\r\n            </div>\r\n            <div className=\"mt-1 mb-3\">\r\n              {videoState.caption}\r\n            </div>\r\n\r\n            {videoState.tags ?\r\n              <div className=\"flex flex-wrap flex-row mb-2\">\r\n                {videoState.tags.map(item => {\r\n                  return (\r\n                    <div className=\"text-md text-gray-500\" key={item}>\r\n                      {videoState.tags.indexOf(item) !== videoState.tags.length - 1 ?\r\n                        <span className=\"mr-1\">#{item}</span>\r\n                        :\r\n                        <span>#{item}</span>}\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n              : null\r\n            }\r\n\r\n            <hr />\r\n            <form className=\"flex flex-col mt-3\">\r\n              {/* if there is a user in local storage, show comment input */}\r\n              {jenBlogName ?\r\n                <div>\r\n                  <div className=\"flex flex-row\">\r\n                    <div>Hello, {jenBlogName}!</div>\r\n                    <div className=\"ml-5 text-gray-500 cursor-pointer\" onClick={removeName}>Not you?</div>\r\n                  </div>\r\n                  <div className=\"flex flex-row mt-1\">\r\n                    <input className=\"appearance-none bg-transparent w-full py-2 px-4 text-gray-700 border-b leading-tight border-transparent focus:border-gray-600 focus:outline-none\"\r\n                      type=\"text\"\r\n                      onClick={toggleSubmitButton}\r\n                      placeholder=\"Add comment...\"\r\n                      ref={commentRef} />\r\n                    <button className=\"hidden ml-2 shadow bg-blue-400 hover:bg-blue-500 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4\"\r\n                      type=\"submit\"\r\n                      id={id + \"submit-button\"}\r\n                      onClick={(event) => { handleCommentSubmit(event, id) }}>\r\n                      Submit\r\n              </button>\r\n                  </div>\r\n                </div>\r\n                :\r\n                <div>\r\n                  <p className=\"mb-1\">Would you like to add a comment? Start by entering your name:</p>\r\n                  <div className=\"flex flex-row\">\r\n                    <input className=\"appearance-none bg-transparent w-full py-2 px-4 text-gray-700 border-b leading-tight border-transparent focus:border-gray-600 focus:outline-none\"\r\n                      type=\"text\"\r\n                      onClick={toggleSubmitButton}\r\n                      placeholder=\"Your name here...\"\r\n                      ref={nameRef} />\r\n                    <button className=\"hidden ml-2 shadow bg-blue-400 hover:bg-blue-500 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4\"\r\n                      type=\"submit\"\r\n                      id={id + \"submit-button\"}\r\n                      onClick={(event) => { updateName(event, nameRef.current.value) }}>\r\n                      Submit\r\n                </button>\r\n                  </div>\r\n\r\n                </div>\r\n              }\r\n\r\n\r\n            </form>\r\n            {/* if comments were returned from API call */}\r\n            {commentState ?\r\n              <div className=\"comments-section mx-4 mb-2 mt-5 p-2 varta\">\r\n                <div className=\"flex justify-between border-b border-gray-700 mb-2 pr-1 pb-1\">\r\n                  {commentState.comments.length} comments\r\n                <i id={\"arrow-\" + id} className=\"fas fa-caret-square-down pt-1 cursor-pointer\"\r\n                    onClick={() => { toggleComments() }}>\r\n                  </i>\r\n                </div>\r\n                <div id={\"comments-section-\" + id} className=\"hidden\">\r\n                  {commentState.comments.map(item => {\r\n                    return (\r\n                      <div className=\"text-md text-gray-700 mb-3\" key={item._id}>\r\n                        <span className=\"font-bold mr-2\">{item.author}</span>\r\n                        <span className=\"text-sm\">{item.date}</span>\r\n                        <br />\r\n                        {item.comment}\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n              </div> : <div className=\"mt-2\">Be the first to comment!</div>}\r\n          </div>\r\n        </div>\r\n\r\n        <RelatedPosts tags={videoState.tags} formatDates={formatDates} id={id}/>\r\n\r\n      </main>\r\n    </div>\r\n  )\r\n\r\n};\r\n\r\nexport default VideoPage;","import React, { useRef, useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport DeleteModal from '../components/DeleteModal';\r\nimport RelatedPosts from '../components/RelatedPosts';\r\nimport API from '../utils/API';\r\n\r\n\r\nfunction TextPage(props) {\r\n  let { id } = useParams();\r\n  const [textState, setTextState] = useState(false);\r\n  const { formatDates, userState, toggleModal } = props;\r\n  const [jenBlogName, setJenBlogName] = useState(localStorage.getItem(\"jenBlogName\"));\r\n  const [commentState, setCommentState] = useState(false);\r\n  const nameRef = useRef();\r\n  const commentRef = useRef();\r\n\r\n  useEffect(() => {\r\n    API.getTextPostById(id).then(res => {\r\n      formatDates(res.data, \"single\");\r\n      setTextState(res.data);\r\n      API.getTpCommentsByTp(id).then(comments => {\r\n\r\n        formatDates(comments.data, \"comments\");\r\n\r\n        if (comments.data) {\r\n          setCommentState(comments.data[0].comments);\r\n        }\r\n      }).catch(() => {\r\n        console.log(\"no comments\");\r\n      });\r\n    }).catch(err => console.log(err))\r\n  }, [id])\r\n\r\n  const removeName = () => {\r\n    // clear local storage\r\n    localStorage.removeItem(\"jenBlogName\");\r\n    // update state\r\n    setJenBlogName(localStorage.getItem(\"jenBlogName\"));\r\n  }\r\n\r\n  const updateName = (event, input) => {\r\n    event.preventDefault();\r\n    if (input !== \"\") {\r\n      // update local storage\r\n      localStorage.setItem(\"jenBlogName\", input);\r\n      // update state\r\n      setJenBlogName(localStorage.getItem(\"jenBlogName\"));\r\n      // clear text field\r\n      nameRef.current.value = \"\";\r\n    }\r\n  }\r\n\r\n  const handleCommentSubmit = (event, id) => {\r\n    event.preventDefault();\r\n    let today = new Date();\r\n    let date = (today.getMonth() + 1) + '-' + today.getDate() + '-' + today.getFullYear();\r\n\r\n    // if there are no comments yet \r\n    if (!commentState) {\r\n      API.postNewTpComment(\r\n        {\r\n          textpost: id,\r\n          comments: [\r\n            {\r\n              author: jenBlogName,\r\n              date: date,\r\n              comment: commentRef.current.value\r\n            }\r\n          ]\r\n        }\r\n      ).then(() => {\r\n        API.getTpCommentsByTp(id).then(comments => {\r\n          formatDates(comments.data, \"comments\");\r\n          setCommentState(comments.data[0].comments);\r\n          commentRef.current.value = \"\";\r\n        }).catch(err => console.log(err));\r\n      }).catch(err => console.log(err));\r\n    }\r\n    else {\r\n      let data = {\r\n        author: jenBlogName,\r\n        date: date,\r\n        comment: commentRef.current.value\r\n      }\r\n      API.updateTpComments(id, data).then(() => {\r\n        API.getTpCommentsByTp(id).then(comments => {\r\n          formatDates(comments.data, \"comments\");\r\n          setCommentState(comments.data[0].comments);\r\n          commentRef.current.value = \"\";\r\n        }).catch(err => console.log(err));\r\n      }).catch(err => console.log(err));\r\n    }\r\n  }\r\n\r\n  const deleteTextPost = () => {\r\n    if (commentState) {\r\n      API.deleteTextPost(id).then(() => {\r\n        API.deleteTpComments(commentState._id).then(() => {\r\n          toggleModal(id + \"delete-modal\");\r\n          window.location.replace(\"/blog\");\r\n        }).catch((errr) => { console.log(errr) })\r\n      }).catch((err) => { console.log(err) });\r\n    }\r\n    else {\r\n      API.deleteTextPost(id).then(() => {\r\n        toggleModal(id + \"delete-modal\");\r\n        window.location.replace(\"/blog\");\r\n      }).catch((err) => { console.log(err) });\r\n    }\r\n\r\n  }\r\n\r\n  let commentsOpen = false;\r\n  const toggleComments = () => {\r\n    if (commentsOpen) {\r\n      document.getElementById(\"comments-section-\" + id).classList.add(\"hidden\");\r\n      document.getElementById(\"arrow-\" + id).classList.remove(\"fa-caret-square-up\");\r\n      document.getElementById(\"arrow-\" + id).classList.add(\"fa-caret-square-down\");\r\n    }\r\n    else {\r\n      document.getElementById(\"comments-section-\" + id).classList.remove(\"hidden\");\r\n      document.getElementById(\"arrow-\" + id).classList.add(\"fa-caret-square-up\");\r\n      document.getElementById(\"arrow-\" + id).classList.remove(\"fa-caret-square-down\");\r\n    }\r\n    commentsOpen = !commentsOpen;\r\n  }\r\n\r\n\r\n  const toggleSubmitButton = () => {\r\n    document.getElementById(id + \"submit-button\").classList.remove(\"hidden\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/blog\">\r\n        <p className=\"mt-8 ml-4 sm:ml-8 text-gray-600 hover:text-gray-800 inline-block\">\r\n          <i className=\"fas fa-angle-double-left\"></i>   Home\r\n        </p>\r\n      </Link>\r\n      <main className=\"mt-4 mx-1 pb-2 sm:mx-16 xl:flex xl:flex-row xl:justify-around\">\r\n        <div className=\"flex-shrink-0 videos\">\r\n\r\n          <div key={id} className=\"mb-5 relative text-gray-700\">\r\n            {/* change true to check if user is logged in */}\r\n            {userState ?\r\n              <DeleteModal id={id} title={textState.title} toggleModal={toggleModal} deleteTextPost={deleteTextPost} type={\"textpost\"} />\r\n              : <div></div>}\r\n            {/* if the textpost has a title, print the title */}\r\n            {textState.title ? <span className=\"text-lg sm:text-xl pl-2 sm:pl-0 lato\">{textState.title}</span> : null}\r\n            <br />\r\n            <span className=\"text-gray-700 text-sm pl-2 sm:pl-0 lato\">{textState.date}</span>\r\n            <div className=\"tp-container mt-2\">\r\n              {textState.body}\r\n            </div>\r\n            <div className=\"mt-1 mb-3\">\r\n              {textState.caption}\r\n            </div>\r\n\r\n            {textState.tags ?\r\n              <div className=\"flex flex-wrap flex-row mb-2\">\r\n                {textState.tags.map(item => {\r\n                  return (\r\n                    <div className=\"text-md text-gray-500\" key={item}>\r\n                      {textState.tags.indexOf(item) !== textState.tags.length - 1 ?\r\n                        <span className=\"mr-1\">#{item}</span>\r\n                        :\r\n                        <span>#{item}</span>}\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n              : null\r\n            }\r\n\r\n            <hr />\r\n            <form className=\"flex flex-col mt-3\">\r\n              {jenBlogName ?\r\n                <div>\r\n                  <div className=\"flex flex-row\">\r\n                    <div>Hello, {jenBlogName}!</div>\r\n                    <div className=\"ml-5 text-gray-500 cursor-pointer\" onClick={removeName}>Not you?</div>\r\n                  </div>\r\n                  <div className=\"flex flex-row mt-1\">\r\n                    <input className=\"appearance-none bg-transparent w-full py-2 px-4 text-gray-700 border-b leading-tight border-transparent focus:border-gray-600 focus:outline-none\"\r\n                      type=\"text\"\r\n                      onClick={toggleSubmitButton}\r\n                      placeholder=\"Add comment...\"\r\n                      ref={commentRef} />\r\n                    <button className=\"hidden ml-2 shadow bg-blue-400 hover:bg-blue-500 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4\"\r\n                      type=\"submit\"\r\n                      id={id + \"submit-button\"}\r\n                      onClick={(event) => { handleCommentSubmit(event, id) }}>\r\n                      Submit\r\n                  </button>\r\n                  </div>\r\n                </div>\r\n                :\r\n                <div>\r\n                  <p className=\"mb-1\">Would you like to add a comment? Start by entering your name:</p>\r\n                  <div className=\"flex flex-row\">\r\n                    <input className=\"appearance-none bg-transparent w-full py-2 px-4 text-gray-700 border-b leading-tight border-transparent focus:border-gray-600 focus:outline-none\"\r\n                      type=\"text\"\r\n                      onClick={toggleSubmitButton}\r\n                      placeholder=\"Your name here...\"\r\n                      ref={nameRef} />\r\n                    <button className=\"hidden ml-2 shadow bg-blue-400 hover:bg-blue-500 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4\"\r\n                      type=\"submit\"\r\n                      id={id + \"submit-button\"}\r\n                      onClick={(event) => { updateName(event, nameRef.current.value) }}>\r\n                      Submit\r\n                  </button>\r\n                  </div>\r\n                </div>\r\n              }\r\n\r\n            </form>\r\n            {commentState.length > 0 ?\r\n              <div className=\"comments-section mx-4 mb-2 mt-5 p-2 varta\">\r\n                <div className=\"flex justify-between border-b border-gray-700 mb-2 pr-1 pb-1\">{commentState.length} comments <i id={\"arrow-\" + id} className=\"fas fa-caret-square-up pt-1 cursor-pointer\" onClick={() => { toggleComments() }}></i></div>\r\n                <div id={\"comments-section-\" + id}>\r\n                  {commentState.map(item => {\r\n                    return (\r\n                      <div className=\"text-md text-gray-700 mb-3\" key={item._id}>\r\n                        <span className=\"font-bold mr-2\">{item.author}</span>\r\n                        <span className=\"text-sm\">{item.date}</span>\r\n                        <br />\r\n                        {item.comment}\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n              </div> : <div className=\"mt-2\">Be the first to comment!</div>}\r\n          </div>\r\n        </div>\r\n\r\n        <RelatedPosts tags={textState.tags} formatDates={formatDates} id={id}/>\r\n\r\n      </main>\r\n    </div>\r\n\r\n  )\r\n\r\n};\r\n\r\nexport default TextPage;","import React, { useState, useEffect } from 'react';\r\nimport Masonry from \"masonry-layout\";\r\nimport VideoThumbnail from '../components/VideoThumbnail';\r\nimport TextThumbnail from '../components/TextThumbnail';\r\nimport API from '../utils/API';\r\n\r\n// custom styling is in App.css\r\nfunction Thumbnails(props) {  \r\n  \r\n\r\n  // set up state for storing post data\r\n  const [postsData, setPostsData] = useState([]);\r\n  const [ytCommentData, setYtCommentData] = useState([]);\r\n  const [tpCommentData, setTpCommentData] = useState([]);\r\n\r\n  const [noResults, setNoResults] = useState(false);\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  const { toggleModal } = props;\r\n\r\n  // gather video data on load\r\n  useEffect(() => {\r\n    updatePage();\r\n  }, []);\r\n\r\n  // run api calls and update state when searchstate changes\r\n  useEffect(() => {\r\n    setPostsData([]);\r\n    updatePage();\r\n  }, [props.searchState]);\r\n\r\n  useEffect(() => {\r\n    var elem = document.querySelector('.grid');\r\n    var msnry = new Masonry( elem, {\r\n      // options\r\n      itemSelector: '.grid-item',\r\n      percentPosition: true,\r\n      gutter: 10\r\n    });\r\n  }, [loaded]);\r\n\r\n\r\n\r\n  // this function gets video data from db, sorts by date, formats the dates and updates the state with the result\r\n  const updatePage = () => {\r\n    setLoaded(false);\r\n    setNoResults(false);\r\n    API.getYtVideosByQuery(props.searchState).then(vids => {\r\n      API.getYtComments().then(ytComments => {\r\n        API.getTextPostsByQuery(props.searchState).then(posts => {\r\n          API.getTpComments().then(tpComments => {\r\n            // determine if there are no results\r\n            if (vids.data.length === 0 && posts.data.length === 0) {\r\n              setNoResults(true);\r\n            }\r\n\r\n            let allPosts = vids.data.concat(posts.data);\r\n\r\n            // sort the result by date descending\r\n            allPosts.sort(function (a, b) {\r\n              return new Date(b.date) - new Date(a.date);\r\n            });\r\n\r\n            // put the dates in mm-dd-yyyy format\r\n            formatDates(ytComments.data, \"comment\");\r\n            formatDates(allPosts, \"post\")\r\n            formatDates(tpComments.data, \"comment\");\r\n\r\n            // update the state\r\n            setPostsData(allPosts);\r\n            setYtCommentData(ytComments.data);\r\n            setTpCommentData(tpComments.data);\r\n            setLoaded(true);\r\n          }).catch(err => console.log(\"error getting text post comments\", err));\r\n        }).catch(err => console.log(\"error getting text posts\", err));\r\n      }).catch(err => console.log(\"error getting youtube comments\", err));\r\n    }).catch(err => console.log(\"error getting youtube videos\", err));\r\n    // }\r\n  }\r\n\r\n  // this function takes an array of objects each with a date key and formats the dates into mm-dd-yyyy format\r\n  // for type === post, the dates are at data[i].date\r\n  // for type === comments, the dates are at data[i].comments[j].date\r\n  const formatDates = (data, type) => {\r\n    if (type === \"post\") {\r\n      for (let i = 0; i < data.length; i++) {\r\n        let dateArr = data[i].date.split(\"-\");\r\n        dateArr = [dateArr[1], dateArr[2].substring(0, 2), dateArr[0]];\r\n        data[i].date = dateArr.join(\"-\");\r\n      }\r\n    }\r\n    else {\r\n      for (let i = 0; i < data.length; i++) {\r\n        for (let j = 0; j < data[i].comments.length; j++) {\r\n          let dateArr = data[i].comments[j].date.split(\"-\");\r\n          dateArr = [dateArr[1], dateArr[2].substring(0, 2), dateArr[0]];\r\n          data[i].comments[j].date = dateArr.join(\"-\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const updateComments = (video, data, commentRef) => {\r\n    API.updateYtComments(video, data).then(() => {\r\n      updatePage();\r\n      commentRef.current.value = \"\";\r\n    }).catch(err => { console.log(err) });\r\n  }\r\n\r\n  return (\r\n    <main className=\"mt-8 sm:mx-6 md:mx-16 mx-2 pb-2 inner-shadow z-0\">\r\n\r\n      {/* if the posts are done loading */}\r\n      {loaded && !noResults ?\r\n      <div>\r\n          <div className=\"w-full grid animate__animated animate__fadeIn\">\r\n\r\n            {postsData.map(item => {\r\n              // check if item is a video\r\n              if (item.video) {\r\n                let comments = ytCommentData.filter(comment => comment.video === item._id);\r\n                // check if video has comments\r\n                if (comments[0] !== undefined) {\r\n                  return (\r\n                    <div className=\"grid-item\">\r\n                      <VideoThumbnail key={item._id} id={item._id} toggleModal={toggleModal} updatePage={updatePage} title={item.title} date={item.date} video={item.video} tags={item.tags} comments={comments[0].comments.length} />\r\n                    </div>\r\n                  )\r\n                }\r\n                else {\r\n                  // video has no comments\r\n                  return (\r\n                    <div className=\"grid-item\">\r\n                      <VideoThumbnail key={item._id} id={item._id} toggleModal={toggleModal} updatePage={updatePage} title={item.title} date={item.date} tags={item.tags} video={item.video} />\r\n                    </div>\r\n                  )\r\n                }\r\n              }\r\n              // check if item is a text post\r\n              else if (item.body) {\r\n                let comments = tpCommentData.filter(comment => comment.textpost === item._id);\r\n                // check if text post has comments\r\n                if (comments[0] !== undefined) {\r\n                  return (\r\n                    <div className=\"grid-item\">\r\n                      <TextThumbnail key={item._id} id={item._id} toggleModal={toggleModal} updateComments={updateComments} updatePage={updatePage} title={item.title} date={item.date} body={item.body} caption={item.caption} tags={item.tags} comments={comments[0].comments.length} />\r\n                    </div>\r\n                  )\r\n                }\r\n                else {\r\n                  // text post with no comments\r\n                  return (\r\n                    <div className=\"grid-item\">\r\n                      <TextThumbnail key={item._id} id={item._id} toggleModal={toggleModal} updatePage={updatePage} title={item.title} date={item.date} body={item.body} caption={item.caption} tags={item.tags} />\r\n                    </div>\r\n                  )\r\n                }\r\n              }\r\n            })\r\n            }          \r\n          </div>\r\n        </div>\r\n        :\r\n\r\n        !loaded ?\r\n          // if the posts are not done loading\r\n          <div className=\"w-full fixed top-0 left-0 h-full loading-page flex justify-center items-center z-0\">\r\n            <p className=\"lato text-gray-100 text-3xl\">Loading...</p>\r\n          </div>\r\n          :\r\n            // if the posts are done loading and there are no results\r\n            <div>\r\n              <p className=\"lato text-gray-700 text-3xl\">No results :|</p>\r\n            </div>\r\n      }\r\n\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Thumbnails;","import React, { useRef } from 'react';\r\nimport API from '../utils/API';\r\n\r\nfunction Login() {\r\n\r\n  const usernameRef = useRef();\r\n  const passwordRef = useRef();\r\n\r\n  function handleLogin(event) {\r\n    event.preventDefault();\r\n    API.loginUser({\r\n      username: usernameRef.current.value,\r\n      password: passwordRef.current.value\r\n    }).then(() => {\r\n      console.log(\"logged in\");\r\n      window.location.replace(\"/\");\r\n    }).catch(err => {\r\n      console.log(\"Couldn't log in... \", err);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form className=\"px-4 mx-auto mt-12 w-full max-w-md\">\r\n      <div className=\"md:flex md:items-center mb-6\">\r\n        <div className=\"md:w-1/3\">\r\n          <label className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\" htmlFor=\"username\">\r\n            Username\r\n          </label>\r\n        </div>\r\n        <div className=\"md:w-2/3\">\r\n          <input \r\n            className=\"bg-white rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none\"\r\n            id=\"username\"\r\n            type=\"text\"\r\n            placeholder=\"JennyBenedict\"\r\n            ref={usernameRef}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"md:flex md:items-center mb-6\">\r\n        <div className=\"md:w-1/3\">\r\n          <label className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n        </div>\r\n        <div className=\"md:w-2/3\">\r\n          <input \r\n            className=\"bg-white rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"******\"\r\n            ref={passwordRef}\r\n          />\r\n        </div>\r\n      </div>        \r\n      <div className=\"md:flex md:items-center\">\r\n        <div className=\"md:w-1/3\"></div>\r\n        <div className=\"md:w-2/3\">\r\n          <button className=\"shadow bg-red-500 hover:bg-red-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4\"\r\n              onClick={handleLogin}>\r\n              Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Search from './components/Search';\nimport VideoPage from './pages/VideoPage';\nimport TextPage from './pages/TextPage';\nimport Thumbnails from './pages/Thumbnails';\nimport API from './utils/API';\nimport './App.css';\nimport Login from './pages/Login';\n\nfunction App() {\n\n  const [searchState, setSearchState] = useState([]);\n  const [userState, setUserState] = useState(false);\n\n\n  useEffect(() => {\n    API.getUserData().then(res => {\n      setUserState(true);\n    }).catch(err => {\n      console.log(\"Not logged in\");\n      setUserState(false);\n    })\n  }, []);\n\n  const handleLogout = () => {\n    API.logoutUser().then(() => {\n      setUserState(false);\n      window.location.reload();\n    }).catch(err => console.log(err));\n  }\n\n  // this function takes an array of objects each with a date key and formats the dates into mm-dd-yyyy format\n  // for type === post, the dates are at data[i].date\n  // for type === single, the dates are in data.date\n  // for type === comments, the dates are at data[i].comments[j].date\n  const formatDates = (data, type) => {\n    if (type === \"post\") {\n      for (let i = 0; i < data.length; i++) {\n        let dateArr = data[i].date.split(\"-\");\n        dateArr = [dateArr[1], dateArr[2].substring(0, 2), dateArr[0]];\n        data[i].date = dateArr.join(\"-\");\n      }\n    }\n    else if (type === \"single\") {\n      let dateArr = data.date.split(\"-\");\n      dateArr = [dateArr[1], dateArr[2].substring(0, 2), dateArr[0]];\n      data.date = dateArr.join(\"-\");\n    }\n    else {\n      for (let i = 0; i < data.length; i++) {\n        for (let j = 0; j < data[i].comments.length; j++) {\n          let dateArr = data[i].comments[j].date.split(\"-\");\n          dateArr = [dateArr[1], dateArr[2].substring(0, 2), dateArr[0]];\n          data[i].comments[j].date = dateArr.join(\"-\");\n        }\n      }\n    }\n  }\n\n  // this function updates the state with user input and clears the search field\n  const handleSearch = (event, value) => {\n    event.preventDefault();\n    let term = value;\n    if (!searchState.includes(term)) {\n      setSearchState([...searchState, term]);\n    }\n  }\n\n  // this function updates the state to remove the item clicked\n  const removeTerm = (term) => {\n    let newTerms = searchState.filter(item => item !== term);\n    setSearchState(newTerms);\n  }\n\n  let modalOpen = true;\n  const toggleModal = (target) => {\n    modalOpen = !modalOpen;\n    if (modalOpen) {\n      document.getElementById(target).classList.add(\"hidden\");\n      document.getElementById(target + \"-bg\").classList.add(\"hidden\");\n    } else {\n      document.getElementById(target).classList.remove(\"hidden\");\n      document.getElementById(target + \"-bg\").classList.remove(\"hidden\");\n    }\n  }\n\n  return (\n    <div>\n      <Router>\n        <Header toggleModal={toggleModal} userState={userState} handleLogout={handleLogout} />\n        <Switch>\n          <Route exact path={[\"/\", \"/blog\"]}>\n            <Search handleSearch={handleSearch} removeTerm={removeTerm} searchState={searchState} />\n            <Thumbnails searchState={searchState} toggleModal={toggleModal} />\n          </Route>\n          <Route path={[\"/video/:id\"]}>\n            <VideoPage formatDates={formatDates} userState={userState} toggleModal={toggleModal} />\n          </Route>\n          <Route path={[\"/text/:id\"]}>\n            <TextPage formatDates={formatDates} userState={userState} toggleModal={toggleModal} />\n          </Route>\n          <Route exact path={[\"/admin\"]}>\n            <Login />\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}